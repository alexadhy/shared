# This workflow will build, package and Sign windows, MacOs, Linux App and Deploy it.
# 
# 1. Set up secrets in your workspace:
#   * LINUX_PUBLIC_SIGN_KEY the public key of your secret gpg signing key.
#   * LINUX_PRIVATE_SIGN_KEY_BASE_64 the private key of your secret gpg signing key.
#   * LINUX_SIGN_KEY_ID used to find the key.
# To configure this workflow:
name: DESKTOP ELECTRON - Build, Package, Sign and Deploy Windows, Linux and MacOs Apps using Electron 
on:
#   pull_request:
  #   branches:
  #     - master
    #paths:
      #- "maintemplate/client/**"
      #- ".github/workflows/build-sign-deploy-desktop-electron.yml"
  push:
    branches: 
      - master
    paths:
      - "maintemplate/client/**"
      - ".github/workflows/build-sign-deploy-desktop-electron.yml"

jobs:
  build-package-sign-linux:
    name: "DESKTOP ELECTRON - Linux Build, Package, Sign and Deploy"
    runs-on: ubuntu-latest
    env:
#      GOROOT: /usr/local/go
      GO111MODULE: off
    steps:
      - name: Cloning repository
        uses: actions/checkout@v2.0.0
        
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.14.1

      - name: Install asti
        run: |
          sudo apt-get install libgl1-mesa-dev xorg-dev
          sudo apt-get install gcc libc6-dev
#          export GOPATH=$HOME/go
#          export GOBIN=$HOME/go/bin
#          export PATH=$GOPATH/bin:$GOROOT/bin:$PATH
          go get -u github.com/asticode/go-astilectron-bundler/...
          go get -u github.com/asticode/go-astilectron-bootstrap
          go install github.com/asticode/go-astilectron-bundler/astilectron-bundler

      - uses: subosito/flutter-action@v1.2.0
        with:
          channel: beta

      - name: Setting Up Flutter SDK
        run: flutter pub get
        working-directory: maintemplate/client/

      - name: Build flutter Application
        run: |
          flutter config --enable-web
          flutter build web
          mkdir -p desktop/resources/app/
          cp -r build/web/* desktop/resources/app  
        working-directory: maintemplate/client

      - name: Build asti desktop Application
        run:  |
#          export GOPATH=$HOME/go
#          export GOBIN=$HOME/go/bin
#          export PATH=$GOPATH/bin:$GOROOT/bin:$PATH
          astilectron-bundler
        shell: bash
        working-directory: maintemplate/client/desktop      

      - name: build packer  
        run: |
#          export GOPATH=$HOME/go
#          export GOBIN=$HOME/go/bin
#          export PATH=$GOPATH/bin:$GOROOT/bin:$PATH
          go run main.go -pack=deb -config=config/deb.json -version=1.0
        shell: bash
        env:
          GO111MODULE: auto 
        working-directory: maintemplate/client/packer

      - name: Sign Linux App
        env: 
          SIGN_KEY_BASE_64: ${{ secrets.LINUX_PRIVATE_SIGN_KEY_BASE_64 }}
          SIGN_KEY_ID: ${{ secrets.LINUX_SIGN_KEY_ID }}
          SIGN_KEY_PASSWORD: ${{ secrets.LINUX_SIGN_PASSWORD }}
        run: |
          echo $SIGN_KEY_BASE_64 | base64 -d | tee private_sign_key.asc
          export GPG_TTY=$(tty)
          echo "no-tty" >> ~/.gnupg/gpg.conf
          gpg --list-keys
          echo $SIGN_KEY_PASSWORD | gpg --batch --allow-secret-key-import --import private_sign_key.asc
          gpg --list-keys
          sudo apt-get update
          sudo apt-get install debsigs
          debFile=$(ls packer/build/linux_deb/*.deb)
          debsigs --sign=origin -k $SIGN_KEY_ID ${debFile}
        working-directory: maintemplate/client/
  build-package-sign-windows:
    name: "Windows Build, Package, Sign and Deploy"
    runs-on: windows-latest
    env:
      GO111MODULE: off
    steps:
      - name: Cloning repository
        uses: actions/checkout@v2.0.0
        
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.14.1
      
      - name: Install Astilectron
        run: |
#          export GOPATH=$HOME/go
#          export GOBIN=$HOME/go/bin
#          export PATH=$GOPATH/bin:$GOROOT/bin:$PATH
          go get -u github.com/asticode/go-astilectron-bundler/...
          go get -u github.com/asticode/go-astilectron-bootstrap
          go install github.com/asticode/go-astilectron-bundler/astilectron-bundler
        shell: bash
        working-directory: maintemplate/client
         
      
      - uses: subosito/flutter-action@v1.2.0
        with:
          channel: beta

      - name: Setting Up Flutter SDK
        run: flutter pub get
        working-directory: maintemplate/client/
      
      - name: Build flutter Application
        run: |
          flutter config --enable-web
          flutter build web
          mkdir -p desktop/resources/app/
          cp -r build/web/* desktop/resources/app  
        working-directory: maintemplate/client/
        
      - name: Build asti desktop Application
        run:  |
#          export GOPATH=$HOME/go
#          export GOBIN=$HOME/go/bin
#          export PATH=$GOPATH/bin:$GOROOT/bin:$PATH
          astilectron-bundler.exe
        shell: bash
        working-directory: maintemplate/client/desktop
            
      - name: install wix msi toolset
        run: |
          powershell Invoke-WebRequest https://github.com/wixtoolset/wix3/releases/download/wix3112rtm/wix311-binaries.zip -OutFile wix311.zip 
          powershell Expand-Archive wix311.zip -DestinationPath wix311
        working-directory: maintemplate/client
      
      - name: build packer  
        run: |
#          export GOPATH=$HOME/go
#          export GOBIN=$HOME/go/bin
#          export PATH=$GOPATH/bin:$GOROOT/bin:$PATH
          go run main.go -pack=win -config=config/win.json -version=1.0
        shell: bash
        env:
          GO111MODULE: auto 
        working-directory: maintemplate/client/packer
      
      - name: packaging windows msi
        run: |
          ./wix311/candle.exe -out packer/build/windows-msi/maintemplate.wixobj packer/build/windows-msi/maintemplate.wxs
          ./wix311/light.exe -b . -ext WixUIExtension packer/build/windows-msi/maintemplate.wixobj -out packer/build/windows-msi/maintemplate.msi
        shell: powershell
        working-directory: maintemplate/client

      - name: Sign Linux App
        run: echo "TODO Add signing for Windows using Sign Tool"
        working-directory: maintemplate/client/
  
